/*
Bouncing Circles
Assignment 6 - based on the code template provided, added arrays and basic loop
*/

// constants to set up the environment
const CANVAS_WIDTH = 600;
const CANVAS_HEIGHT = 600;
const BACKGROUND_COLOR = ("pink");

// setting shape size
const SHAPE_SIZE = 20;

//creating X and Y arrays
var circleX = [];
var circleY = [];

// creating XY arrays to be random so that the movement will be random
var circleXSpeed = [];
var circleYSpeed = [];

// setting max speed at 20
var maxSpeed = 20;

// variables circle color
var circleColor = [];


function setup() {
  createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT);
  
  //loop to get circle color and assign random coordinates
  for (i = 0; i < 10; i++){
    circleColor[i] = getColor();
    circleX[i] = random(100, 500);
    circleY[i] = random(100, 500);

    // assign random speed between 0 and max - add i to link to array - how to make it all max?
    circleXSpeed[i] = random(0, maxSpeed);
    circleYSpeed[i] = random(0, maxSpeed);
  }
}

function draw() {
  background(BACKGROUND_COLOR);

  // draw and move circles
  drawShapes();
  moveShapes();

}

//function to draw the shapes with loop
function drawShapes() {
  
  for (i = 0; i < 10; i++){
    drawCircle(circleX[i], circleY[i], SHAPE_SIZE, circleColor[i]);
  }
  
}

/*
This function will loop through our shapes array
and move the shapes accordingly.
*/
function moveShapes() {
  
  for (i = 0; i < 10; i++) {

    // get shape x and y coordinates - why is it on the second one? trial and error but i don't really get it - i think it's because that's the one with coordinates
    var shapeX = circleX[i];
    var shapeY = circleY[i];

    // get shape x and y speeds
    var shapeXSpeed = circleXSpeed[i];
    var shapeYSpeed = circleYSpeed[i];

    
    //did not change code from here
    print("X: " + round(shapeX) + " Y:" + round(shapeY) + " Xsp:" + round(shapeXSpeed) + " Ysp:" + round(shapeYSpeed));

    // check if shape is outside canvas
    if (shapeX < 0 || shapeX > CANVAS_WIDTH - SHAPE_SIZE) {
      // change X direction
      shapeXSpeed = shapeXSpeed * (-1);
    } else if (shapeY < 0 || shapeY > CANVAS_HEIGHT - SHAPE_SIZE) {
      // change Y direction
      shapeYSpeed = shapeYSpeed * (-1);
    } else if (shapeX < 0 || shapeY < 0 || shapeX > CANVAS_WIDTH || shapeY > CANVAS_HEIGHT) {
      // if anything goes wrong (circle is outside canvas) just reset coords
      shapeX = CANVAS_WIDTH / 2;
      shapeY = CANVAS_HEIGHT / 2;

    }

    // move shape
    shapeX = shapeX + shapeXSpeed;
    shapeY = shapeY + shapeYSpeed;

    //to here
    
    
    // update the coordinates of global variables circleX and circleY
    // if you had an array of circles, you would need to update the coordinates of each element in the array
    circleX[i] = shapeX;
    circleY[i] = shapeY;
    circleXSpeed[i] = shapeXSpeed;
    circleYSpeed[i] = shapeYSpeed;

  }

}

/*
	Function to draw a circle at cX, cY with
    size = cSize and color = cColor.
*/
function drawCircle(cX, cY, cSize, cColor) {
  ellipseMode(CORNER);
  noStroke();
  fill(cColor);
  ellipse(cX, cY, cSize, cSize);
}

/*
	A helpful funtion that returns a a color.
 */
function getColor() {
  return color = random(255, 25, 190)
}
